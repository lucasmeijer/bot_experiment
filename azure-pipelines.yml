# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: DetermineBase
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - script: dotnet run --project . pieter
    name: FindBaseStep
    displayName: 'Try some dotnet'
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)

- job: RunOnBase
  dependsOn: DetermineBase
  pool:
    vmImage: 'Ubuntu-16.04'
  variables:
    myVarFromJobA: $[ dependencies.DetermineBase.outputs['FindBaseStep.PullRequestBase'] ] 
  steps:
  - script: git clone $(Build.Repository.Uri)
    displayName: 'Manual git clone'
  - script: git checkout $(myVarFromJobA)
    displayName: 'Manual git checkout'
  - script: mono bee.exe
    workingDirectory: beeproject
  - task: PublishBuildArtifacts@0
    inputs:
      pathtoPublish: 'beeproject/build'
      artifactName: 'reference_linuxbuild'     

- job: RunOnTip
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: mono bee.exe
    workingDirectory: beeproject
  - task: PublishBuildArtifacts@0
    inputs:
      pathtoPublish: 'beeproject/build'
      artifactName: 'tip_linuxbuild'     

- job: CompareAndReportOutputs
  dependsOn: 
    - DetermineBase
    - RunOnTip
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'reference_linuxbuild'
      downloadPath: 'results/reference_linuxbuild'
  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'tip_linuxbuild'
      downloadPath: 'results/tip_linuxbuild'
  - script: ls -l results